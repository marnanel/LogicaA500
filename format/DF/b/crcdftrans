/**
         RS423 FILE TRANSFER
         -------------------

         This section contains :

            G.df.receive

         NAME OF FILE CONTAINING RUNNABLE CODE:

         r.DFtransfer

         REVISION HISTORY:

         DATE     VERSION  AUTHOR      DETAILS OF CHANGE
         17.03.87 1        MH          initial version
         16.04.87 2        MH          Temporary storage file changed from
                                       $TEMP to %TEMP
         16.06.87 3        SRY         Changed %temp to !RS423
**/

SECTION "File transfer"

GET "libhdr"
GET ":0.format.gh.glhd"
GET ":0.format.h.sdhd"
GET ":0.format.h.uthd"
GET ":0.format.h.dfhd"

manifest $( EOT = #xFF $)

/**
         G.DF.RECEIVE
         ------------

         This routine receives a "user data" file from another machine
         via the RS423 serial interface. The data is received in 1024
         byte data frame along with a 2 byte crc (cyclic redundency check)
         tagged on the end of the data frame. The transfered file is written
         to a temporary file called "!RS423".
         The end of the transmission is determined be either an "END OF
         TRANSMISSION" character (CONTROL B) or by a crc error.


         INPUTS:

         OUTPUTS:

         none

         GLOBALS MODIFIED:

         contents of G.df

         SPECIAL NOTES FOR CALLERS:

         none.

         PROGRAM DESIGN LANGUAGE:

         G.df.receive[]
         ---------------

            open temporary file ("!RS423")
            IF open operation is successful THEN
               select RS423 interface as the input stream
               REPEAT
                  clear crc
                  clear data frame counter
                  REPEAT
                     read a data byte from the RS423 interface
                     calculate crc data
                     increment data frame counter
                     UNLESS data byte is EOT THEN
                        write data byte to temporary file
                     ENDUNLESS
                  UNTIL EOT OR data frame counter = 1024
                  read transmitted crc
                  IF calculated crc <> transmitted crc THEN
                     error
                  ENDIF
               UNTIL EOT OR error
               close temporary file
            ENDIF


**/

let G.df.receive() be
$(
//   let char.count, crc.input = ?, ?
let char.count = ?
let crc.input = vec 0
   let crc.buff = vec 2   //buffer area for char input and crc calculation.
                          // word 0: calculated crc
                          // word 1: calculated crc value from x value
                          // byte 4: calculated x value
                          // inputed char from RS423

   G.df!m.df.dummy := false
   if G.df.initw("!RS423") = m.ut.success then
   $(
      G.df.RS423.input()  //select rs423 interface as input stream
      $(
         crc.buff!0 := 0 //initialise crc
         char.count := 0
         $(
            crc.buff%5 := G.df.getkey() //read char from rs423 ** n.b this may change
            G.df.crc(crc.buff) //calculate x value, crc value and crc from inputed char
            char.count := char.count + 1
            unless crc.buff%5 = EOT G.df.wrch(crc.buff%5)
         $) repeatuntil crc.buff%5 = EOT | char.count = 1024
         crc.input%0 := G.df.getkey(); crc.input%1 := G.df.getkey() // (crc.input & #x00FF) + (G.df.getkey() << 8)
         unless crc.buff!0 = crc.input!0 G.df.ermess("Transmitting error")
      $) repeatuntil crc.buff%5 = EOT | G.df!m.df.err = true
      G.df.keyboard.input() //select keyboard as input stream
   $)
   G.df.endw()
$)
.
