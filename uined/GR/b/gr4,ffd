section "gr4"

/**
         GR.B.GR4 - MACHINE SPECIFIC ROUTINES
         ------------------------------------

         NAME OF FILE CONTAINING RUNNABLE CODE:

         r.grid

         REVISION HISTORY:

         DATE     VERSION  AUTHOR      DETAILS OF CHANGE
       22.06.87   1        SRY         Initial version

         GLOBALS DEFINED:

         G.gr.SRAM.retrieve
         G.gr.SRAM.store
         G.gr.missing
         G.gr.set.missing
         G.gr.grid.cross
**/

get "libhdr"
get ":4.UINED.gh.glhd"
get ":4.UINED.gh.glCMhd"
get ":4.UINED.gh.glGRhd"
get ":4.UINED.h.uthd"
get ":4.UINED.h.sdhd"
get ":4.UINED.h.iophd"
get ":4.UINED.h.cmhd"

let G.gr.SRAM.retrieve(buf.no, offset, num) be
$( let sr.pos = buf.no * m.block.SRAM.bytes + (offset << 1)
   G.ut.srmove(m.ut.from.SRAM, sr.pos, 4, num, 0)
$)

and G.gr.SRAM.store(buf.no, offset, num) be
$( let sr.pos = buf.no * m.block.SRAM.bytes + (offset << 1) 
   G.ut.srmove(m.ut.to.SRAM, sr.pos, 4, num, 0)
$)

and G.gr.missing(n) = valof
$( let t = vec 1
   g.ut.set32(0, #x8000, t)
   resultis (g.ut.cmp32(n, t) = m.eq)
$)

and G.gr.set.missing(n) be g.ut.set32(0, #x8000, n)

and G.gr.grid.cross() be
$( let tenres = G.context!m.resolution * 10
   let xoff = (G.cm.s!m.km.x - G.cm.s!m.km.x0)*10
   let yoff = (G.cm.s!m.km.y - G.cm.s!m.km.y0)*10
   let x = G.cm.a.of(xoff)
   let y = G.cm.b.of(yoff)
   let x1 = G.cm.a.of(xoff+tenres)
   let y1 = G.cm.b.of(yoff+tenres)
   test x < 0 then x := 0 else if x > m.sd.disW x := m.sd.disW
   test y < 0 then y := 0 else if y > m.sd.disH y := m.sd.disH
   test x1 > m.sd.disW then x1 := m.sd.disW else if x1 < 0 x1 := 0
   test y1 > m.sd.disH then y1 := m.sd.disH else if y1 < 0 y1 := 0
/*
   G.sc.movea(m.sd.display, x, y)
   G.sc.XOR.selcol(m.sd.blue)
   G.sc.mover(4, 4)
   G.sc.rect(m.sd.plot, x1-x-12, y1-y-12)
*/
   VDU("25,4,%;%;18,3,2,25,0,4;4;25,97,%;%;",
       x, y+m.sd.disY0, x1-x-12, y1-y-12)
$)
.
